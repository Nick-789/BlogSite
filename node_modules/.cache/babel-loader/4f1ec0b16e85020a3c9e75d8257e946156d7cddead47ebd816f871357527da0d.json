{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\blog-app\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// React component code\nimport React, { useContext, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from '../components/usercontext';\n// import '../styles/App.css';\nimport '../styles/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [animate, setAnimate] = useState(false); // State for animation\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setAnimate(true); // Trigger animation\n    alert(`Login as ${username}`);\n    const response = await fetch(\"http://localhost:4000/login\", {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {\n        setUserInfo(userInfo);\n        setRedirect(true);\n      });\n    } else {\n      alert(\"Wrong Credentials\");\n      setAnimate(false); // Remove animation class\n    }\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-container ${animate ? 'pop' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"1Sl/UUPiH5ZjpAp8uE9qTSsSWpg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useState","Navigate","UserContext","jsxDEV","_jsxDEV","Login","_s","setUserInfo","username","setUsername","password","setPassword","redirect","setRedirect","animate","setAnimate","handleLogin","e","preventDefault","alert","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/blog-app/src/pages/Login.js"],"sourcesContent":["// React component code\r\nimport React, { useContext, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { UserContext } from '../components/usercontext';\r\n// import '../styles/App.css';\r\nimport '../styles/login.css';\r\n\r\nconst Login = () => {\r\n  const { setUserInfo } = useContext(UserContext);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [animate, setAnimate] = useState(false); // State for animation\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setAnimate(true); // Trigger animation\r\n    alert(`Login as ${username}`);\r\n\r\n    const response = await fetch(\"http://localhost:4000/login\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({ username, password }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (response.ok) {\r\n      response.json().then(userInfo => {\r\n        setUserInfo(userInfo);\r\n        setRedirect(true);\r\n      });\r\n    } else {\r\n      alert(\"Wrong Credentials\");\r\n      setAnimate(false); // Remove animation class\r\n    }\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Navigate to={'/'} />;\r\n  }\r\n\r\n  return (\r\n    <div className={`login-container ${animate ? 'pop' : ''}`}>\r\n      <div className=\"login-box\">\r\n        <h2>Login</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button onClick={handleLogin}>Login</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}