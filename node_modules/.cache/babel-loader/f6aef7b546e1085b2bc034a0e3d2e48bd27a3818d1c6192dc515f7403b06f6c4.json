{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\blog-app\\\\src\\\\pages\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"../components/Post\";\nimport SearchBar from \"../SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]); // State to hold filtered posts\n  const [initialLoad, setInitialLoad] = useState(true);\n  useEffect(() => {\n    fetch('http://localhost:4000/upload').then(response => response.json()).then(posts => {\n      setPosts(posts);\n    });\n  }, []);\n  const handleSearch = searchKeyword => {\n    if (searchKeyword.trim() === \"\") {\n      setFilteredPosts([]);\n    } else {\n      const filtered = posts.filter(post => post.title.toLowerCase().includes(searchKeyword.toLowerCase()));\n      setFilteredPosts(filtered);\n    }\n\n    // Set initialLoad to false when a search is performed\n    setInitialLoad(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), initialLoad ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      ...post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }, this)) : filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      ...post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true);\n}\n_s(Homepage, \"OvNJ/vR1/+I/ELcvZABjtSfccpE=\");\n_c = Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useEffect","useState","Post","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Homepage","_s","posts","setPosts","filteredPosts","setFilteredPosts","initialLoad","setInitialLoad","fetch","then","response","json","handleSearch","searchKeyword","trim","filtered","filter","post","title","toLowerCase","includes","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/blog-app/src/pages/Homepage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Post from \"../components/Post\";\r\nimport SearchBar from \"../SearchBar\";\r\n\r\nexport default function Homepage() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filteredPosts, setFilteredPosts] = useState([]); // State to hold filtered posts\r\n    const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/upload')\r\n            .then(response => response.json())\r\n            .then(posts => {\r\n                setPosts(posts);\r\n            });\r\n    }, []);\r\n\r\n    const handleSearch = (searchKeyword) => {\r\n        if (searchKeyword.trim() === \"\") {\r\n            setFilteredPosts([]);\r\n        } else {\r\n            const filtered = posts.filter(post =>\r\n                post.title.toLowerCase().includes(searchKeyword.toLowerCase())\r\n            );\r\n            setFilteredPosts(filtered);\r\n        }\r\n\r\n        // Set initialLoad to false when a search is performed\r\n        setInitialLoad(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SearchBar onSearch={handleSearch} />\r\n\r\n            {initialLoad\r\n                ? posts.map(post => <Post key={post.id} {...post} />)\r\n                : filteredPosts.map(post => <Post key={post.id} {...post} />)\r\n            }\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZgB,KAAK,CAAC,8BAA8B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACP,KAAK,IAAI;MACXC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,YAAY,GAAIC,aAAa,IAAK;IACpC,IAAIA,aAAa,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7BT,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC,MAAM;MACH,MAAMU,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAACC,IAAI,IAC9BA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,aAAa,CAACM,WAAW,CAAC,CAAC,CACjE,CAAC;MACDd,gBAAgB,CAACU,QAAQ,CAAC;IAC9B;;IAEA;IACAR,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACIV,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA,CAACF,SAAS;MAAC2B,QAAQ,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEpCpB,WAAW,GACNJ,KAAK,CAACyB,GAAG,CAACV,IAAI,iBAAIpB,OAAA,CAACH,IAAI;MAAA,GAAmBuB;IAAI,GAAjBA,IAAI,CAACW,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,CAAC,GACnDtB,aAAa,CAACuB,GAAG,CAACV,IAAI,iBAAIpB,OAAA,CAACH,IAAI;MAAA,GAAmBuB;IAAI,GAAjBA,IAAI,CAACW,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,CAAC;EAAA,eAEnE,CAAC;AAEX;AAACzB,EAAA,CArCuBD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}